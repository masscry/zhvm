################################################################################
#                 FIBBONACHI NUMBERS SEQUENCE                                  #
################################################################################

!data                                              # DATA SEGMENT
!initial                                           # REQUESTED FIB ELEMENT
!30                                                # AS BYTE 30

# ENTRY TEST BLOCK
nop[]
nop[]
nop[]
nop[]
nop[]
# END ENTRY TEST BLOCK


!code
!entry
$s = add[,1023]                                    # SET STACK
$p = add[,@main]                                   # GO TO MAIN

!$P @entry

!fib                                               # CALCULATE FIB NUMBERS
$p = cmz[$a, @fbcase0]                             # IF RA == 0 GOTO FBCASE0
$0 = eq[$a, 1] $p = cmn[$0, @fbcase1]              # IF RA == 0 GOTO FBCASE1
$p = add[,@fbcaset]                                # GOTO FBCASET

!fbcase0                                           # 
$b = add[,0]                                       # RESULT = 0 
$p = ret[$s]                                       # RETURN

!fbcase1                                           #
$b = add[,1]                                       # RESULT = 1
$p = ret[$s]                                       # RETURN

!fbcaset
$s = sub[$s, 4] $s = svl[$a]                       # SAVE RA TO STACK
$s = sub[$s, 4] $s = svl[$1]                       #      R1
$s = sub[$s, 4] $s = svl[$2]                       #      R2

# CALCULATE FIB-R1
$a = sub[$a,1]                                     # R1 = RA - 1
$p = zcl[$s,@fib]                                  # CALL FIB
$1 = add[$b]                                       # R1 = RET

# CALCULATE FIB-R2
$a = sub[$a,1]                                     # R1 = RA - 1
$p = zcl[$s,@fib]                                  # CALL FIB
$2 = add[$b]                                       # R2 = RET

$b = add[$1, $2]                                   # RESULT = R1 + R2

$2 = ldl[$s] $s = add[$s, 4]                       # RESTORE R2
$1 = ldl[$s] $s = add[$s, 4]                       # RESTORE R1
$a = ldl[$s] $s = add[$s, 4]                       # RESTORE RA

$p = ret[$s]                                       # RETURN

!main
$a = ldb[,@initial]                                # CALCULATE REQUESTED FIB ELEMENT
$p = zcl[$s,@fib]                                  # CALL FIB
$a = add[$b]                                       #
cll[,0]                                            # PRINT RET

hlt[]                                              # STOP
